generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model inventario {
  InventarioID Int        @id
  ProductoID   String?    @db.VarChar(50)
  Stock        String?    @db.VarChar(50)
  productos    productos? @relation(fields: [ProductoID], references: [ProductoID], onDelete: NoAction, onUpdate: NoAction, map: "inventario_ibfk_1")

  @@index([ProductoID], map: "ProductoID")
}

model recursos {
  RecursoID  String      @id @default(cuid()) @db.VarChar(50)
  ProductoID String?     @db.VarChar(50)
  EmpleadoID String?     @db.VarChar(50)
  Costo      Decimal?    @db.Decimal(10, 2)
  productos  productos?  @relation(fields: [ProductoID], references: [ProductoID], onDelete: NoAction, onUpdate: NoAction, map: "recursos_ibfk_1")
  empleados  empleados?  @relation(fields: [EmpleadoID], references: [EmpleadoID], onDelete: NoAction, onUpdate: NoAction, map: "recursos_ibfk_2")
  servicios  servicios[]

  @@index([EmpleadoID], map: "EmpleadoID")
  @@index([ProductoID], map: "ProductoID")
}

model suministro {
  suministroID       String               @id @default(cuid()) @db.VarChar(50)
  ProveedorID        String?              @db.VarChar(50)
  EgresoID           String?              @db.VarChar(50)
  fecha              DateTime?            @db.Date
  detalle_suministro detalle_suministro[]
  proveedores        proveedores?         @relation(fields: [ProveedorID], references: [ProveedorID], onDelete: NoAction, onUpdate: NoAction, map: "suministro_ibfk_1")
  egresos            egresos?             @relation(fields: [EgresoID], references: [EgresoID], onDelete: NoAction, onUpdate: NoAction, map: "suministro_ibfk_2")

  @@index([EgresoID], map: "EgresoID")
  @@index([ProveedorID], map: "ProveedorID")
}

model cargo_empleado {
  CargoID   String      @id @default(cuid()) @db.VarChar(50)
  Nombre    String?     @db.VarChar(255)
  empleados empleados[]
}

model categoria_producto {
  CategoriaID String      @id @default(cuid()) @db.VarChar(50)
  Descripcion String?     @db.VarChar(255)
  productos   productos[]
}

model clientes {
  ClienteID     String        @id @default(cuid()) @db.VarChar(50)
  TipoClienteID String?       @db.VarChar(50)
  nombre        String?       @db.VarChar(255)
  apellido      String?       @db.VarChar(255)
  telefono      Int?
  Entidad       String?       @db.VarChar(255)
  RUC           String?       @unique(map: "RUC") @db.VarChar(50)
  tipo_cliente  tipo_cliente? @relation(fields: [TipoClienteID], references: [TipoClienteID], onDelete: NoAction, onUpdate: NoAction, map: "clientes_ibfk_1")
  equipo        equipo[]
  servicios     servicios[]

  @@index([TipoClienteID], map: "TipoClienteID")
}

model detalle_servicio {
  DetalleServicioID String         @id @default(cuid()) @db.VarChar(50)
  TipoServicioID    String?        @db.VarChar(50)
  equipoID          String?        @db.VarChar(50)
  servicioID        String?        @db.VarChar(50)
  Costo             Decimal?       @db.Decimal(10, 2)
  fecha             DateTime?      @db.Date
  notas             String?        @db.VarChar(255)
  tipo_servicio     tipo_servicio? @relation(fields: [TipoServicioID], references: [TipoServicioID], onDelete: NoAction, onUpdate: NoAction, map: "detalle_servicio_ibfk_1")
  equipo            equipo?        @relation(fields: [equipoID], references: [EquipoID], onDelete: NoAction, onUpdate: NoAction, map: "detalle_servicio_ibfk_2")
  servicios         servicios?     @relation(fields: [servicioID], references: [ServicioID], onDelete: NoAction, onUpdate: NoAction, map: "detalle_servicio_ibfk_3")

  @@index([TipoServicioID], map: "TipoServicioID")
  @@index([equipoID], map: "equipoID")
  @@index([servicioID], map: "servicioID")
}

model detalle_suministro {
  DetalleSuministroID String      @id @default(cuid()) @db.VarChar(50)
  SuministroID        String?     @db.VarChar(50)
  ProductoID          String?     @db.VarChar(50)
  costo               Decimal?    @db.Decimal(10, 2)
  cantidad            Int?
  suministro          suministro? @relation(fields: [SuministroID], references: [suministroID], onDelete: NoAction, onUpdate: NoAction, map: "detalle_suministro_ibfk_1")
  productos           productos?  @relation(fields: [ProductoID], references: [ProductoID], onDelete: NoAction, onUpdate: NoAction, map: "detalle_suministro_ibfk_2")

  @@index([ProductoID], map: "ProductoID")
  @@index([SuministroID], map: "SuministroID")
}

model direcciones {
  DireccionID String   @id @default(cuid()) @db.VarChar(50)
  Descripcion String?  @db.VarChar(255)
  equipo      equipo[]
}

model egresos {
  EgresoID      String          @id @default(cuid()) @db.VarChar(50)
  Monto         Decimal?        @db.Decimal(10, 2)
  fecha         DateTime?       @db.Date
  gastos_varios gastos_varios[]
  pago_empleado pago_empleado[]
  pago_impuesto pago_impuesto[]
  suministro    suministro[]
}

model empleados {
  EmpleadoID     String          @id @default(cuid()) @db.VarChar(50)
  CargoID        String?         @db.VarChar(50)
  nombre         String?         @db.VarChar(255)
  apellido       String?         @db.VarChar(255)
  telefono       Int?
  cedula         String?         @unique(map: "cedula") @db.VarChar(50)
  cargo_empleado cargo_empleado? @relation(fields: [CargoID], references: [CargoID], onDelete: NoAction, onUpdate: NoAction, map: "empleados_ibfk_1")
  pago_empleado  pago_empleado[]
  recursos       recursos[]

  @@index([CargoID], map: "CargoID")
}

model equipo {
  EquipoID         String             @id @default(cuid()) @db.VarChar(50)
  TipoEquipoID     String?            @db.VarChar(50)
  DireccionID      String?            @db.VarChar(50)
  ClienteID        String?            @db.VarChar(50)
  Capacidad        Int?
  marca            String?            @db.VarChar(50)
  numeroSerie      String?            @db.VarChar(50)
  detalle_servicio detalle_servicio[]
  tipo_equipo      tipo_equipo?       @relation(fields: [TipoEquipoID], references: [TipoEquipoID], onDelete: NoAction, onUpdate: NoAction, map: "equipo_ibfk_1")
  direcciones      direcciones?       @relation(fields: [DireccionID], references: [DireccionID], onDelete: NoAction, onUpdate: NoAction, map: "equipo_ibfk_2")
  clientes         clientes?          @relation(fields: [ClienteID], references: [ClienteID], onDelete: NoAction, onUpdate: NoAction, map: "equipo_ibfk_3")

  @@index([ClienteID], map: "ClienteID")
  @@index([DireccionID], map: "DireccionID")
  @@index([TipoEquipoID], map: "TipoEquipoID")
}

model gastos_varios {
  GastoID     String   @id @default(cuid()) @db.VarChar(50)
  EgresoID    String?  @db.VarChar(50)
  descripcion String?  @db.VarChar(255)
  egresos     egresos? @relation(fields: [EgresoID], references: [EgresoID], onDelete: NoAction, onUpdate: NoAction, map: "gastos_varios_ibfk_1")

  @@index([EgresoID], map: "EgresoID")
}

model pago_empleado {
  SalarioID  String     @id @default(cuid()) @db.VarChar(50)
  EmpleadoID String?    @db.VarChar(50)
  EgresoID   String?    @db.VarChar(50)
  Concepto   String?    @db.VarChar(255)
  empleados  empleados? @relation(fields: [EmpleadoID], references: [EmpleadoID], onDelete: NoAction, onUpdate: NoAction, map: "pago_empleado_ibfk_1")
  egresos    egresos?   @relation(fields: [EgresoID], references: [EgresoID], onDelete: NoAction, onUpdate: NoAction, map: "pago_empleado_ibfk_2")

  @@index([EgresoID], map: "EgresoID")
  @@index([EmpleadoID], map: "EmpleadoID")
}

model pago_impuesto {
  ImpuestoID    String   @id @default(cuid()) @db.VarChar(50)
  EgresoID      String?  @db.VarChar(50)
  nombreEntidad String?  @db.VarChar(255)
  egresos       egresos? @relation(fields: [EgresoID], references: [EgresoID], onDelete: NoAction, onUpdate: NoAction, map: "pago_impuesto_ibfk_1")

  @@index([EgresoID], map: "EgresoID")
}

model productos {
  ProductoID         String               @id @default(cuid()) @db.VarChar(50)
  CategoriaID        String?              @db.VarChar(50)
  Nombre             String?              @db.VarChar(255)
  detalle_suministro detalle_suministro[]
  inventario         inventario[]
  categoria_producto categoria_producto?  @relation(fields: [CategoriaID], references: [CategoriaID], onDelete: NoAction, onUpdate: NoAction, map: "productos_ibfk_1")
  recursos           recursos[]

  @@index([CategoriaID], map: "CategoriaID")
}

model proveedores {
  ProveedorID String       @id @default(cuid()) @db.VarChar(50)
  nombre      String?      @db.VarChar(255)
  apellido    String?      @db.VarChar(255)
  telefono    Int?
  direccion   String?      @db.VarChar(255)
  ruc         String?      @unique(map: "ruc") @db.VarChar(50)
  suministro  suministro[]
}

model servicios {
  ServicioID       String             @id @default(cuid()) @db.VarChar(50)
  RecursosID       String?            @db.VarChar(50)
  ClienteID        String?            @db.VarChar(50)
  detalle_servicio detalle_servicio[]
  recursos         recursos?          @relation(fields: [RecursosID], references: [RecursoID], onDelete: NoAction, onUpdate: NoAction, map: "servicios_ibfk_1")
  clientes         clientes?          @relation(fields: [ClienteID], references: [ClienteID], onDelete: NoAction, onUpdate: NoAction, map: "servicios_ibfk_2")

  @@index([ClienteID], map: "ClienteID")
  @@index([RecursosID], map: "RecursosID")
}

model tipo_cliente {
  TipoClienteID String     @id @default(cuid()) @db.VarChar(50)
  TipoCliente   String?    @db.VarChar(50)
  clientes      clientes[]
}

model tipo_equipo {
  TipoEquipoID String   @id @default(cuid()) @db.VarChar(50)
  Tipo         String?  @db.VarChar(50)
  Descripcion  String?  @db.VarChar(255)
  equipo       equipo[]
}

model tipo_servicio {
  TipoServicioID   String             @id @default(cuid()) @db.VarChar(50)
  Tipo             String?            @db.VarChar(50)
  Descripcion      String?            @db.VarChar(255)
  detalle_servicio detalle_servicio[]
}
